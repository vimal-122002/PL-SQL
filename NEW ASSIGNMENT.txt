CREATE TABLE AUTHOR( AUTHORID NUMBER(10) PRIMARY KEY, AUTHORNAME VARCHAR2(25), DOB DATE, NATIONALITY VARCHAR2(25), REWARDS VARCHAR2(25));

INSERT INTO AUTHOR VALUES(1,'JAMES','01/02/2000','GERMANY','HUGO REWARD');
INSERT INTO AUTHOR VALUES(2,'ARNOLD','01/02/1980','ITALY','LITERATURE');
INSERT INTO AUTHOR VALUES(3,'WATSON','01/02/1988','ENGLAND','NOBEL PRIZE');
INSERT INTO AUTHOR VALUES(4,'THOMAS','08/02/1998','ENGLAND','NOBEL PRIZE');
INSERT INTO AUTHOR VALUES(5,'JOYAL','11/08/1978','SCOTLAND','EDGAR REWARD');

SELECT * FROM AUTHOR;

CREATE TABLE CATEGORY(CATEGORYID NUMBER(10) PRIMARY KEY, CATEGORYNAME VARCHAR2(25), DESCRIPTION VARCHAR2(25));
INSERT INTO CATEGORY VALUES(1,'NOVALIST','CLASSIC');
INSERT INTO CATEGORY VALUES(2,'SCREENWRITER','URBAN');
INSERT INTO CATEGORY VALUES(3,'NOVALIST','CLASSIC');
INSERT INTO CATEGORY VALUES(4,'POET','URBAN');
INSERT INTO CATEGORY VALUES(5,'ESSAY','ANALYTICAL');
INSERT INTO CATEGORY VALUES(6,'OUTDATED','OUTDATED');



CREATE TABLE PUBLISHER( PUBLISHERID NUMBER(10) PRIMARY KEY, PUBLISHERNAME VARCHAR2(25), ADDRESS VARCHAR2(25), CONTACTNO NUMBER(10), YEAROF_ESTD DATE);

INSERT INTO PUBLISHER VALUES(1,'DC BOOKS','INDIA',1234567890,'01/02/2024');
INSERT INTO PUBLISHER VALUES(2,'KARAN BOOKS','INDIA',1234567826,'01/03/2024');
INSERT INTO PUBLISHER VALUES(3,'DC BOOKS','CANADA',1234567830,'01/04/2023');
INSERT INTO PUBLISHER VALUES(4,'DC BOOKS','INDIA',1234267890,'01/02/2022');
INSERT INTO PUBLISHER VALUES(5,'KARAN BOOKS','INDIA',1234587890,'01/02/2020');



CREATE TABLE BOOK( BOOKID NUMBER(10) PRIMARY KEY, TITLE VARCHAR2(25), AUTHORID NUMBER(10),FOREIGN KEY(AUTHORID) REFERENCES AUTHOR(AUTHORID), PUBLISHERID NUMBER(10), FOREIGN KEY(PUBLISHERID) REFERENCES PUBLISHER(PUBLISHERID), LANGUAGE VARCHAR2(25), CATEGORYID NUMBER(10),FOREIGN KEY(CATEGORYID) REFERENCES CATEGORY(CATEGORYID),PRICE NUMBER(10), QUANTITY NUMBER(10));

INSERT INTO BOOK VALUES(1,'MALGUDI DAYS',1,1,'ENGLISH',1,2000,2);
INSERT INTO BOOK VALUES(2,'MAHABARATHA',2,2,'ENGLISH',2,2000,10);
INSERT INTO BOOK VALUES(3,'THE GUIDE',3,3,'ENGLISH',3,2000,22);
INSERT INTO BOOK VALUES(4,'UNTOUCHABLE',4,4,'ENGLISH',4,2000,82);
INSERT INTO BOOK VALUES(5,'GITANJALI',5,5,'ENGLISH',5,2000,12);


CREATE TABLE CUSTOMER( CUSTOMERID NUMBER(10) PRIMARY KEY, CUSTNAME VARCHAR2(25), BOOKID NUMBER(10), FOREIGN KEY(BOOKID) REFERENCES BOOK (BOOKID),ISSUEDATE DATE,STATUS VARCHAR2(25));

INSERT INTO CUSTOMER VALUES(1,'RAJEEV',2,'03/05/2025',NULL);
INSERT INTO CUSTOMER VALUES(2,'RAJEEV',2,'03/05/2024',NULL);
INSERT INTO CUSTOMER VALUES(3,'BINOY',3,'03/05/2023',NULL);
INSERT INTO CUSTOMER VALUES(4,'ARJUN',4,'03/05/2022',NULL);
INSERT INTO CUSTOMER VALUES(5,'ARYAN',1,'03/05/2021','PENDING');



CREATE TABLE ISSUE( ISSUEID NUMBER(10) PRIMARY KEY, BOOKID NUMBER(10), FOREIGN KEY(BOOKID) REFERENCES BOOK(BOOKID), CUSTOMERID NUMBER(10), FOREIGN KEY(CUSTOMERID) REFERENCES CUSTOMER(CUSTOMERID),DATEODISSUE DATE, DATEOFRETURN DATE, FINE_AMT NUMBER(10));

INSERT INTO ISSUE VALUES(1,1,1,'10/02/2002','02/03/2023',500);
INSERT INTO ISSUE VALUES(2,1,1,'10/06/2004','04/10/2023',500);
INSERT INTO ISSUE VALUES(3,2,1,'10/02/2003','02/03/2022',1000);
INSERT INTO ISSUE VALUES(4,3,2,'11/02/2005','02/03/2025',500);
INSERT INTO ISSUE VALUES(5,4,5,'10/02/2007','02/03/2020',500);



 
CREATE TABLE SALES( SALE_ID NUMBER(10) PRIMARY KEY, CATEGORYID NUMBER(10),FOREIGN KEY(CATEGORYID) REFERENCES CATEGORY(CATEGORYID), BOOKID NUMBER(10),FOREIGN KEY(BOOKID) REFERENCES BOOK(BOOKID),SALES_DATE DATE, UNITPRICE NUMBER(10), QUANTITY NUMBER(10));

INSERT INTO SALES VALUES(1,1,1,'11/11/2022',200,39);
INSERT INTO SALES VALUES(2,2,2,'10/10/2021',500,20);
INSERT INTO SALES VALUES(3,3,3,'12/12/2020',900,80);
INSERT INTO SALES VALUES(4,4,4,'09/09/2019',100,90);
INSERT INTO SALES VALUES(5,5,5,'12/12/2016',100,10);




SELECT * FROM BOOK;
SELECT * FROM AUTHOR;
SELECT * FROM CATEGORY;
SELECT * FROM PUBLISHER;
SELECT * FROM CUSTOMER;
SELECT * FROM ISSUE;
SELECT * FROM SALES;




SELECT PUBLISHERNAME FROM PUBLISHER;

SELECT AUTHORNAME FROM AUTHOR WHERE DOB >'01/01/1980';

SELECT AUTHORNAME FROM AUTHOR WHERE REWARDS='NOBEL PRIZE';




SELECT TITLE ,AUTHORNAME,PUBLISHERNAME FROM BOOK B JOIN  PUBLISHER P ON B.PUBLISHERID=P.PUBLISHERID JOIN AUTHOR A ON B.AUTHORID=A.AUTHORID;

SELECT TITLE ,AUTHORNAME,PUBLISHERNAME FROM BOOK B JOIN  PUBLISHER P ON B.PUBLISHERID=P.PUBLISHERID JOIN AUTHOR A ON B.AUTHORID=A.AUTHORID WHERE AUTHORNAME='JAMES' AND PUBLISHERNAME='DC BOOKS';

SELECT TITLE ,AUTHORNAME,NATIONALITY,PUBLISHERNAME FROM BOOK B JOIN PUBLISHER P ON B.PUBLISHERID=P.PUBLISHERID JOIN AUTHOR A ON  B.AUTHORID=A.AUTHORID WHERE NATIONALITY='ENGLAND';

SELECT DISTINCT P.PUBLISHERNAME FROM PUBLISHER P JOIN BOOK B ON P.PUBLISHERID = B.PUBLISHERID JOIN AUTHOR A ON B.AUTHORID = A.AUTHORID WHERE A.AUTHORNAME = 'JAMES';





SELECT P.PUBLISHERNAME, COUNT(B.BOOKID)  FROM PUBLISHER P JOIN BOOK B ON P.PUBLISHERID = B.PUBLISHERID GROUP BY P.PUBLISHERNAME;

SELECT A.AUTHORNAME, COUNT(B.BOOKID) FROM AUTHOR A JOIN BOOK B ON A.AUTHORID = B.AUTHORID GROUP BY A.AUTHORNAME;

SELECT COUNT(DISTINCT A.AUTHORID) AS TOTALCOUNT FROM AUTHOR A JOIN BOOK B ON A.AUTHORID = B.AUTHORID JOIN PUBLISHER P ON B.PUBLISHERID = P.PUBLISHERID  WHERE P.PUBLISHERNAME = 'DC BOOKS';





SELECT B.TITLE, P.PUBLISHERNAME, A.AUTHORNAME  FROM BOOK B  JOIN PUBLISHER P ON B.PUBLISHERID = P.PUBLISHERID  JOIN AUTHOR A ON B.AUTHORID = A.AUTHORID  WHERE P.PUBLISHERNAME = 'DC BOOKS'  AND A.AUTHORNAME != 'JAMES';

SELECT A.AUTHORNAME FROM AUTHOR A JOIN BOOK B ON A.AUTHORID = B.AUTHORID GROUP BY A.AUTHORID, A.AUTHORNAME HAVING COUNT(DISTINCT B.PUBLISHERID) > 1;

SELECT *  FROM PUBLISHER  WHERE EXTRACT(YEAR FROM YEAROF_ESTD) = EXTRACT(YEAR FROM SYSDATE) - 1;

SELECT TITLE, AUTHORNAME FROM BOOK B JOIN AUTHOR A ON B.AUTHORID= A.AUTHORID WHERE NATIONALITY IN ('ENGLAND','GERMANY');




SELECT A.AUTHORID, A.AUTHORNAME, COUNT(DISTINCT B.PUBLISHERID) AS COUNT FROM BOOK B JOIN AUTHOR A ON B.AUTHORID = A.AUTHORID GROUP BY A.AUTHORID, A.AUTHORNAME ORDER BY COUNT DESC;

SELECT DISTINCT P.PUBLISHERNAME FROM PUBLISHER P JOIN BOOK B ON P.PUBLISHERID = B.PUBLISHERID JOIN AUTHOR A ON B.AUTHORID = A.AUTHORID WHERE A.NATIONALITY = 'ENGLAND';

SELECT B.TITLE, A.AUTHORNAME FROM BOOK B JOIN AUTHOR A ON B.AUTHORID = A.AUTHORID WHERE A.AUTHORID = 1 AND A.AUTHORID IN ( SELECT AUTHORID FROM BOOK GROUP BY AUTHORID HAVING COUNT(*) = ( SELECT MAX(COUNT) FROM ( SELECT COUNT(*) AS COUNT FROM BOOK GROUP BY AUTHORID )));

SELECT DISTINCT P.PUBLISHERNAME FROM PUBLISHER P JOIN BOOK B ON P.PUBLISHERID = B.PUBLISHERID JOIN AUTHOR A ON B.AUTHORID = A.AUTHORID WHERE EXTRACT(YEAR FROM A.DOB) <= EXTRACT(YEAR FROM SYSDATE) - 40;




UPDATE PUBLISHER SET CONTACTNO = 11111111 WHERE PUBLISHERID = 1;

DELETE FROM AUTHOR WHERE AUTHORID NOT IN (SELECT DISTINCT AUTHORID FROM BOOK);

UPDATE BOOK SET PUBLISHERID = 3 WHERE AUTHORID = 1;






SELECT * FROM BOOK;
SELECT * FROM AUTHOR;
SELECT * FROM CATEGORY;
SELECT * FROM PUBLISHER;
SELECT * FROM CUSTOMER;
SELECT * FROM ISSUE;
SELECT * FROM SALES;


SELECT C.CATEGORYNAME, MAX(B.PRICE) AS MAX_PRICE FROM BOOK B JOIN CATEGORY C ON B.CATEGORYID = C.CATEGORYID WHERE B.PRICE = (SELECT MAX(PRICE) FROM BOOK) GROUP BY C.CATEGORYNAME;

SELECT CATEGORYNAME,COUNT FROM ( SELECT C.CATEGORYNAME, COUNT(B.BOOKID) AS COUNT FROM CATEGORY C JOIN BOOK B ON C.CATEGORYID = B.CATEGORYID GROUP BY C.CATEGORYNAME ORDER BY COUNT DESC ) WHERE ROWNUM <= 3;

SELECT B.TITLE, B.PRICE, B.QUANTITY, C.CATEGORYNAME FROM BOOK B JOIN CATEGORY C ON B.CATEGORYID = C.CATEGORYID WHERE B.CATEGORYID IN ( SELECT CATEGORYID FROM BOOK GROUP BY CATEGORYID HAVING COUNT(BOOKID) = 1) ORDER BY B.PRICE;

UPDATE BOOK SET PRICE = PRICE * 1.10 WHERE CATEGORYID = (SELECT CATEGORYID FROM CATEGORY WHERE CATEGORYNAME = 'ESSAY');

DELETE FROM BOOK WHERE CATEGORYID = (SELECT CATEGORYID FROM CATEGORY WHERE CATEGORYNAME = 'OUTDATED');

SELECT B.TITLE, C.CATEGORYNAME FROM BOOK B JOIN CATEGORY C ON B.CATEGORYID = C.CATEGORYID GROUP BY C.CATEGORYNAME, B.TITLE HAVING COUNT(B.BOOKID) > 10;

SELECT DISTINCT C.CATEGORYNAME FROM CATEGORY C JOIN BOOK B ON C.CATEGORYID = B.CATEGORYID WHERE B.PRICE > 2000;

SELECT B.TITLE, B.PRICE, C.CATEGORYNAME FROM BOOK B JOIN CATEGORY C ON B.CATEGORYID = C.CATEGORYID WHERE C.CATEGORYID IN ( SELECT S.CATEGORYID FROM SALES S GROUP BY S.CATEGORYID HAVING AVG(S.UNITPRICE) > 500 );

SELECT A.AUTHORID, A.AUTHORNAME, COUNT(DISTINCT B.PUBLISHERID) AS COUNT FROM AUTHOR A JOIN BOOK B ON A.AUTHORID = B.AUTHORID GROUP BY A.AUTHORID, A.AUTHORNAME HAVING COUNT(DISTINCT B.PUBLISHERID) > 3;









 